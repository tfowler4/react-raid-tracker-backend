AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: 'Sample SAM Template for raid-tracker

  '
Globals:
  Function:
    Timeout: 100
Resources:
  RaidTrackerBackend:
    Type: AWS::Serverless::Function
    Properties:
      Description: A simple example includes a .NET Core WebAPI App with DynamoDB
        table.
      CodeUri: RaidTrackerBackend
      Handler: ServerlessAPI
      Runtime: dotnet8
      MemorySize: 1024
      Environment:
        Variables:
          SAMPLE_TABLE:
            Ref: SampleTable
          USER_TABLE:
            Ref: UserTable
      Policies:
      - DynamoDBCrudPolicy:
          TableName:
            Ref: UserTable
      - DynamoDBCrudPolicy:
          TableName:
            Ref: SampleTable
      Events:
        ProxyResource:
          Type: HttpApi
          Properties:
            PayloadFormatVersion: '2.0'
            Path: /{proxy+}
            Method: ANY
        RootResource:
          PayloadFormatVersion: '2.0'
          Type: HttpApi
          Properties:
            Path: /
            Method: ANY
    Metadata:
      SamResourceId: RaidTrackerBackend
  SampleTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: sam-appBookCatalog
      PrimaryKey:
        Name: Id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
  UserTable:
    Type: AWS::Serverless::SimpleTable
    Properties:
      TableName: raid-tracker-UserTable
      PrimaryKey:
        Name: Id
        Type: String
      ProvisionedThroughput:
        ReadCapacityUnits: 2
        WriteCapacityUnits: 2
  ApplicationResourceGroup:
    Type: AWS::ResourceGroups::Group
    Properties:
      Name:
        Fn::Sub: ApplicationInsights-SAM-${AWS::StackName}
      ResourceQuery:
        Type: CLOUDFORMATION_STACK_1_0
  ApplicationInsightsMonitoring:
    Type: AWS::ApplicationInsights::Application
    Properties:
      ResourceGroupName:
        Ref: ApplicationResourceGroup
      AutoConfigurationEnabled: 'true'
Outputs:
  WebEndpoint:
    Description: API Gateway endpoint URL
    Value:
      Fn::Sub: https://${ServerlessHttpApi}.execute-api.${AWS::Region}.amazonaws.com/
